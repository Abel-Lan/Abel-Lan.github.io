{"version":3,"sources":["webpack://gatsby-starter-blog/./src/pages/tags.js"],"names":["data","group","allMarkdownRemark","title","site","siteMetadata","location","description","style","listStyle","map","tag","key","fieldValue","Link","to","kebabCase","totalCount"],"mappings":"+MA6DA,UA/CiB,SAAC,GAAD,QACfA,KACuBC,EAFR,EAEbC,kBAAqBD,MAEHE,EAJL,EAGbC,KACEC,aAAgBF,MAEjBG,EANY,EAMZA,SANY,OAQf,gBAAC,IAAD,CAAQA,SAAUA,EAAUH,MAAOA,GAChC,gBAAC,IAAD,CACGA,MAAM,OACNI,YAAW,UAAYJ,IAE3B,gBAAC,IAAD,MACA,2BACE,kCACA,sBAAIK,MAAO,CAAEC,UAAU,SACpBR,EAAMS,KAAI,SAAAC,GAAG,OACZ,sBAAIC,IAAKD,EAAIE,YACX,gBAAC,EAAAC,KAAD,CAAMC,GAAE,SAAWC,IAAUL,EAAIE,YAAzB,KACLF,EAAIE,WADP,KACqBF,EAAIM,WADzB","file":"component---src-pages-tags-js-dd8cacf7304c265d99eb.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n// Utilities\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\n// Components\r\n// import { Helmet } from \"react-helmet\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst TagsPage = ({\r\n  data: {\r\n    allMarkdownRemark: { group },\r\n    site: {\r\n      siteMetadata: { title },\r\n    }\r\n  }, location, \r\n}) => (\r\n  <Layout location={location} title={title}>\r\n     <SEO \r\n        title=\"Tags\"\r\n        description={`Tags | ${title}`}\r\n    />\r\n    <Bio />\r\n    <div>\r\n      <h1>Tags</h1>\r\n      <ol style={{ listStyle: `none` }}>\r\n        {group.map(tag => (\r\n          <li key={tag.fieldValue}>\r\n            <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\r\n              {tag.fieldValue} ({tag.totalCount})\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  </Layout>\r\n)\r\n\r\nTagsPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      group: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          fieldValue: PropTypes.string.isRequired,\r\n          totalCount: PropTypes.number.isRequired,\r\n        }).isRequired\r\n      ),\r\n    }),\r\n    site: PropTypes.shape({\r\n      siteMetadata: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n      }),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default TagsPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 2000) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}