{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-list-template.js"],"names":["author","useStaticQuery","site","siteMetadata","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","BlogList","render","data","this","props","siteTitle","title","posts","allMarkdownRemark","nodes","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","pageTitle","length","location","description","itemProp","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","date","dangerouslySetInnerHTML","__html","excerpt","display","flexWrap","justifyContent","alignItems","padding","rel","Array","from","_","i","margin","borderRadius","textDecoration","color","background","React"],"mappings":"o6BA0DA,IA/CY,WAAO,IAAD,EAkBVA,EAAM,WAjBCC,oBAAe,cAiBRC,KAAKC,oBAAb,aAAG,EAAwBH,OAGvC,OACE,uBAAKI,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,aAAA,EAAAA,EAAQa,OACP,0BACGb,aAAA,EAAAA,EAAQc,UAAW,KADtB,IAGE,2BACA,qBAAGC,KAAI,gCAAP,6B,yGC1CJC,E,6FACJC,OAAA,WAAU,IAAD,EACCC,EAASC,KAAKC,MAAdF,KAIJG,GAAY,UAAAH,EAAKhB,KAAKC,oBAAV,eAAwBmB,QAAxB,QACZC,EAAQL,EAAKM,kBAAkBC,MAN5B,EAQyBN,KAAKC,MAAMM,YAArCC,EARC,EAQDA,YAAaC,EARZ,EAQYA,SACfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAAI,IAAM,UAAYA,EAAc,GAAGK,WACtEC,EAAW,UAAYN,EAAc,GAAGK,WACxCE,EAAY,eAAiBP,EAEnC,OAAqB,IAAjBJ,EAAMY,OAEN,gBAAC,IAAD,CAAQC,SAAUjB,KAAKC,MAAMgB,SAAUd,MAAOD,GAC5C,gBAAC,IAAD,CAAKC,MAAM,SACX,gBAAC,IAAD,MACA,kDAQJ,gBAAC,IAAD,CAAQc,SAAUjB,KAAKC,MAAMgB,SAAUd,MAAOD,GAC5C,gBAAC,IAAD,CACEC,MAAOY,EACPG,YAAgBH,EAAL,MAAoBb,IAEjC,8BACE,sBAAIiB,SAAS,YAAb,SAEF,gBAAC,IAAD,MACA,sBAAIlC,UAAU,WAAWmC,MAAO,CAAEC,UAAU,SACzCjB,EAAMkB,KAAI,SAAAC,GACT,IAAMpB,EAAQoB,EAAKC,YAAYrB,OAASoB,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACEzC,UAAU,iBACV2C,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMP,SAAS,OACnC,wBAAMA,SAAS,YAAYhB,KAG/B,6BAAQoB,EAAKC,YAAYQ,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQX,EAAKC,YAAYN,aAAeK,EAAKY,SAE/ChB,SAAS,uBASrB,sBACEC,MAAO,CACLgB,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,WAAY,SACZlB,UAAW,OACXmB,QAAS,KAGT9B,GACA,gBAAC,EAAAoB,KAAD,CAAMC,GAAInB,EAAU6B,IAAI,QAAxB,mBAIDC,MAAMC,KAAK,CAAE3B,OAAQP,IAAY,SAACmC,EAAGC,GAAJ,OAChC,sBACElB,IAAG,qBAAsBkB,EAAI,GAC7BzB,MAAO,CACL0B,OAAQ,IAGV,gBAAC,EAAAhB,KAAD,CACEC,GAAE,UAAiB,IAANc,EAAU,GAAKA,EAAI,GAChCzB,MAAO,CACLoB,QAAS,UACTO,aAAc,MACdC,eAAgB,OAChBC,MAAOJ,EAAI,IAAMrC,EAAc,UAAY,GAC3C0C,WAAYL,EAAI,IAAMrC,EAAc,UAAY,KAGjDqC,EAAI,QAITlC,GACA,gBAAC,EAAAmB,KAAD,CAAMC,GAAIjB,EAAU2B,IAAI,QAAxB,kB,GA5GWU,aAsHvB","file":"component---src-templates-blog-list-template-js-c0bd0062c0f37160fdf1.js","sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  // const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\r\n        src=\"../images/profile-pic.png\"\r\n        width={50}\r\n        height={50}\r\n        quality={95}\r\n        alt=\"Profile picture\"\r\n      />\r\n      {author?.name && (\r\n        <p>\r\n          {author?.summary || null}\r\n          {` `}\r\n          <br />\r\n          <a href={`mailto:lydhcrusher@gmail.com`}>\r\n            lydhcrusher@gmail.com\r\n          </a>\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nclass BlogList extends React.Component {\r\n  render() {\r\n    const { data } = this.props\r\n\r\n    //console.log(this.props.pageContext)\r\n\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes\r\n\r\n  const { currentPage, numPages } = this.props.pageContext\r\n  const isFirst = currentPage === 1\r\n  const isLast = currentPage === numPages\r\n  const prevPage = currentPage - 1 === 1 ? '/' : '/blog/' + (currentPage - 1).toString()\r\n  const nextPage = '/blog/' + (currentPage + 1).toString()\r\n  const pageTitle = 'Blog | Page ' + currentPage \r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO title=\"Blog\" />\r\n        <Bio />\r\n        <p>\r\n          No blog posts found. \r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={this.props.location} title={siteTitle}>\r\n      <SEO\r\n        title={pageTitle}\r\n        description={`${pageTitle} | ${siteTitle}`}\r\n      />\r\n      <header>\r\n        <h1 itemProp=\"headline\">Blog</h1>\r\n      </header>\r\n      <Bio />\r\n      <ol className=\"blogList\" style={{ listStyle: `none` }}>\r\n        {posts.map(post => {\r\n          const title = post.frontmatter.title || post.fields.slug\r\n\r\n          return (\r\n            <li key={post.fields.slug}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <header>\r\n                  <h2>\r\n                    <Link to={post.fields.slug} itemProp=\"url\">\r\n                      <span itemProp=\"headline\">{title}</span>\r\n                    </Link>\r\n                  </h2>\r\n                  <small>{post.frontmatter.date}</small>\r\n                </header>\r\n                <section>\r\n                  <p\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: post.frontmatter.description || post.excerpt,\r\n                    }}\r\n                    itemProp=\"description\"\r\n                  />\r\n                </section>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n\r\n        <ul\r\n          style={{\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            listStyle: 'none',\r\n            padding: 0,\r\n          }}\r\n        >\r\n          {!isFirst && (\r\n            <Link to={prevPage} rel=\"prev\">\r\n              ← Previous Page\r\n            </Link>\r\n          )}\r\n          {Array.from({ length: numPages }, (_, i) => (\r\n            <li\r\n              key={`pagination-number${i + 1}`}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              <Link\r\n                to={`/blog/${i === 0 ? '' : i + 1}`}\r\n                style={{\r\n                  padding: '5px 8px',\r\n                  borderRadius: '3px',\r\n                  textDecoration: 'none',\r\n                  color: i + 1 === currentPage ? '#ffffff' : '',\r\n                  background: i + 1 === currentPage ? '#007acc' : '',\r\n                }}\r\n              >\r\n                {i + 1}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n          {!isLast && (\r\n            <Link to={nextPage} rel=\"next\">\r\n              Next Page →\r\n            </Link>\r\n          )}\r\n        </ul>\r\n    </Layout>\r\n  )\r\n}\r\n}\r\n\r\nexport default BlogList\r\n\r\nexport const blogListQuery = graphql`\r\n  query blogListQuery($skip: Int!, $limit: Int!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}